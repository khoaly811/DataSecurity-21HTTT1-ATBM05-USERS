CREATE OR REPLACE FUNCTION F_CS_DANGKY_1(
    P_SCHEMA IN VARCHAR2,
    P_OBJECT IN VARCHAR2
)
RETURN VARCHAR2
AS 
    USERNAME VARCHAR2(30);
    USERROLE NUMBER;
    PREDICATE VARCHAR2(1000);
BEGIN
    USERNAME := SYS_CONTEXT('USERENV', 'SESSION_USER');
    
    IF  USERNAME = 'C##QLK' THEN
        RETURN '';
    ELSE
        SELECT COUNT(*) INTO USERROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE = USERNAME AND (GRANTED_ROLE = 'TKHOA' OR GRANTED_ROLE = 'GVU');
        IF USERROLE > 0 THEN
            PREDICATE:= '1=1';
        ELSE
            SELECT COUNT(*) INTO USERROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE = USERNAME AND (GRANTED_ROLE = 'SV');
            IF USERROLE > 0 THEN
                PREDICATE:= 'UPPER(MASV) = ''' || USERNAME || '''';
            ELSE
                SELECT COUNT(*) INTO USERROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE = USERNAME AND (GRANTED_ROLE = 'GV' OR GRANTED_ROLE = 'TDV');
                IF USERROLE > 0 THEN
                    PREDICATE:= 'UPPER(MAGV) = ''' || USERNAME || '''';
                ELSE
                    PREDICATE:= '1=0';
                END IF;
            END IF;
        END IF;
    END IF;
    RETURN PREDICATE;
END;
/
BEGIN 
    DBMS_RLS.ADD_POLICY(
        OBJECT_SCHEMA => 'C##QLK',
        OBJECT_NAME => 'DANGKY',
        POLICY_NAME => 'DANGKY_POLICY_1',
        FUNCTION_SCHEMA => 'C##QLK',
        POLICY_FUNCTION => 'F_CS_DANGKY_1',
        STATEMENT_TYPES => 'SELECT',
        UPDATE_CHECK => TRUE,
        ENABLE => TRUE);  
END;
/
--BEGIN 
--    DBMS_RLS.DROP_POLICY(
--        OBJECT_SCHEMA => 'C##QLK',
--        OBJECT_NAME => 'DANGKY',
--        POLICY_NAME => 'DANGKY_POLICY_2');  
--END;
--/

CREATE OR REPLACE FUNCTION F_CS_DANGKY_2(
    P_SCHEMA IN VARCHAR2,
    P_OBJECT IN VARCHAR2
)
RETURN VARCHAR2
AS 
    USERNAME VARCHAR2(30);
    USERROLE NUMBER;
    PREDICATE VARCHAR2(1000);
BEGIN
    USERNAME := SYS_CONTEXT('USERENV', 'SESSION_USER');
    
    IF USERNAME = 'C##QLK' THEN
        RETURN ''; -- No policy applied for user QLK
    ELSE
        SELECT COUNT(*) INTO USERROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE = USERNAME AND (GRANTED_ROLE IN ('GV', 'TDV', 'TKHOA'));

        IF USERROLE > 0 THEN
            PREDICATE := 'UPPER(MAGV) = ''' || USERNAME || ''' AND DANGKY.MAHP IN (SELECT KHMO.MAHP FROM KHMO WHERE DANGKY.HK = KHMO.HK AND DANGKY.NAM = KHMO.NAM AND SYSDATE < NGAYBD + 105 AND SYSDATE >= NGAYBD)';
        ELSE
            -- Check if user is GVU
            SELECT COUNT(*) INTO USERROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE = USERNAME AND GRANTED_ROLE = 'GVU';
            IF USERROLE > 0 THEN -- User is GVU
                PREDICATE := 'DANGKY.MAHP IN (SELECT KHMO.MAHP FROM KHMO WHERE DANGKY.HK = KHMO.HK AND DANGKY.NAM = KHMO.NAM AND SYSDATE < NGAYBD + 15 AND SYSDATE >= NGAYBD - 5)'; -- Allow access within a specific date range
            ELSE
                -- Check if user is SV
                SELECT COUNT(*) INTO USERROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE = USERNAME AND GRANTED_ROLE = 'SV';
                IF USERROLE > 0 THEN -- User is SV
                    PREDICATE := 'UPPER(MASV) = ''' || USERNAME || ''' AND DANGKY.MAHP IN (SELECT KHMO.MAHP FROM KHMO WHERE DANGKY.HK = KHMO.HK AND DANGKY.NAM = KHMO.NAM AND SYSDATE < NGAYBD + 15 AND SYSDATE >= NGAYBD - 15)';
                ELSE
                    PREDICATE := '1=0'; -- Deny access for other users
                END IF;
            END IF;
        END IF;
    END IF;

    RETURN PREDICATE;
END;
/

BEGIN 
    DBMS_RLS.ADD_POLICY(
        OBJECT_SCHEMA => 'C##QLK',
        OBJECT_NAME => 'DANGKY',
        POLICY_NAME => 'DANGKY_POLICY_2',
        FUNCTION_SCHEMA => 'C##QLK',
        POLICY_FUNCTION => 'F_CS_DANGKY_2',
        STATEMENT_TYPES => 'INSERT, UPDATE, DELETE',
        UPDATE_CHECK => TRUE,
        ENABLE => TRUE);  
END;
/

GRANT SELECT ON DANGKY TO SV, GVU, GV, TKHOA, TDV;
GRANT INSERT(MASV, MAGV, MAHP) ON DANGKY TO SV;
GRANT DELETE ON DANGKY TO SV;
GRANT UPDATE(DIEMTH, DIEMQT, DIEMCK, DIEMTK) ON DANGKY TO GV, TKHOA, TDV;
GRANT INSERT, UPDATE, DELETE ON DANGKY TO GVU;
GRANT SELECT, UPDATE ON DANGKY TO NVCB;