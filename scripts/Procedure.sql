ALTER PLUGGABLE DATABASE ATBM2024 OPEN READ WRITE;

----test
--CREATE OR REPLACE PROCEDURE GET_USERS_PROC (
--    users_cursor OUT SYS_REFCURSOR
--) AS
--BEGIN
--    OPEN users_cursor FOR
--        SELECT USERNAME, ACCOUNT_STATUS, EXPIRY_DATE, CREATED, LAST_LOGIN, GRANTED_ROLE
--        FROM dba_users
--        JOIN dba_role_privs ON dba_users.username = dba_role_privs.grantee
--        WHERE (username LIKE 'NV%' OR username LIKE 'SV%');
--END;
--/
--
--SET SERVEROUTPUT ON;
--
--SELECT * FROM ALL_TABLES WHERE TABLE_NAME = 'NHANSU';
--DECLARE
--    v_users_cursor SYS_REFCURSOR;
--BEGIN
--    GET_USERS_PROC(v_users_cursor);
--END;
--/

CREATE OR REPLACE PROCEDURE SP_GRANT_EXECUTE(
    INP_PROC IN VARCHAR2,
    INP_ROLE IN VARCHAR2
)
AS
    COUNT_ROLES INT;
BEGIN
    SELECT COUNT(*) INTO COUNT_ROLES FROM ROLE_TAB_PRIVS WHERE ROLE = INP_ROLE;

    IF COUNT_ROLES > 0 THEN
        EXECUTE IMMEDIATE 'GRANT EXECUTE ON ' || INP_PROC || ' TO ' || INP_ROLE;
        DBMS_OUTPUT.PUT_LINE('GRANT EXECUTE THANH CONG CHO ' || INP_ROLE);
    ELSE
        DBMS_OUTPUT.PUT_LINE('Role ' || INP_ROLE || ' KHONG CO DUOC EXECUTE ' || INP_PROC);
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_TABLE', 'COMBINED_ROLE');
    SP_GRANT_EXECUTE('SP_ALL_UPDATE_NHANSU', 'COMBINED_ROLE');
END;
/
select * from nhansu;
-- GUI THONG TIN NHAN SU
CREATE OR REPLACE PROCEDURE SP_VIEW_NHANSU(
    RESULT_CURSOR OUT SYS_REFCURSOR
)
AS
    TEMP_COUNT INT;
    QUERY_STRING VARCHAR2(1000);
BEGIN
    SELECT COUNT(*) INTO TEMP_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'NHANSU';
    IF (TEMP_COUNT = 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'THONG TIN KHONG TON TAI!');
    ELSE
        QUERY_STRING := 'SELECT HOTEN, PHAI, NGSINH, PHUCAP, DT, VAITRO, TENDV 
        FROM C##QLK.NHANSU NS JOIN C##QLK.DONVI DV ON NS.MADV = DV.MADV';
        OPEN RESULT_CURSOR FOR QUERY_STRING;
    END IF;
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_NHANSU', 'TKHOA');
    SP_GRANT_EXECUTE('SP_VIEW_NHANSU', 'TDV');
    SP_GRANT_EXECUTE('SP_VIEW_NHANSU', 'GV');
    SP_GRANT_EXECUTE('SP_VIEW_NHANSU', 'GVU');
    SP_GRANT_EXECUTE('SP_VIEW_NHANSU', 'NVCB');
    SP_GRANT_EXECUTE('SP_VIEW_NHANSU', 'SV');
END;
/
-- GUI THONG TIN SINH VIEN 
CREATE OR REPLACE PROCEDURE SP_VIEW_SINHVIEN(
    RESULT_CURSOR OUT SYS_REFCURSOR
)
AS
    TEMP_COUNT INT;
    QUERY_STRING VARCHAR2(1000);
BEGIN
    SELECT COUNT(*) INTO TEMP_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'SINHVIEN';
    IF (TEMP_COUNT = 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'THONG TIN KHONG TON TAI!');
    ELSE
        QUERY_STRING := 'SELECT HOTEN, MACT, MANGANH, PHAI, NGSINH, DCHI, DT, SOTCTL, DTBTL 
        FROM C##QLK.SINHVIEN';
        OPEN RESULT_CURSOR FOR QUERY_STRING;
    END IF;
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_SINHVIEN', 'TKHOA');
    SP_GRANT_EXECUTE('SP_VIEW_SINHVIEN', 'TDV');
    SP_GRANT_EXECUTE('SP_VIEW_SINHVIEN', 'GV');
    SP_GRANT_EXECUTE('SP_VIEW_SINHVIEN', 'GVU');
    SP_GRANT_EXECUTE('SP_VIEW_SINHVIEN', 'NVCB');
    SP_GRANT_EXECUTE('SP_VIEW_SINHVIEN', 'SV');
END;
/
-- GUI THONG TIN DON VI
CREATE OR REPLACE PROCEDURE SP_VIEW_DONVI(
    RESULT_CURSOR OUT SYS_REFCURSOR
)
AS
    TEMP_COUNT INT;
    QUERY_STRING VARCHAR2(1000);
BEGIN
    SELECT COUNT(*) INTO TEMP_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'DONVI';
    IF (TEMP_COUNT = 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'THONG TIN KHONG TON TAI!');
    ELSE
        QUERY_STRING := 'SELECT TENDV, HOTEN 
        FROM C##QLK.DONVI DV JOIN C##QLK.NHANSU NS ON DV.TRGDV = NS.MANV';
        OPEN RESULT_CURSOR FOR QUERY_STRING;
    END IF;
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_DONVI', 'TKHOA');
    SP_GRANT_EXECUTE('SP_VIEW_DONVI', 'TDV');
    SP_GRANT_EXECUTE('SP_VIEW_DONVI', 'GV');
    SP_GRANT_EXECUTE('SP_VIEW_DONVI', 'GVU');
    SP_GRANT_EXECUTE('SP_VIEW_DONVI', 'NVCB');
    SP_GRANT_EXECUTE('SP_VIEW_DONVI', 'SV');
END;
/
-- GUI DANH SACH HOC PHAN
CREATE OR REPLACE PROCEDURE SP_VIEW_HOCPHAN(
    RESULT_CURSOR OUT SYS_REFCURSOR
)
AS
    TEMP_COUNT INT;
    QUERY_STRING VARCHAR2(1000);
BEGIN
    SELECT COUNT(*) INTO TEMP_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'HOCPHAN';
    IF (TEMP_COUNT = 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'THONG TIN KHONG TON TAI!');
    ELSE
        QUERY_STRING := 'SELECT TENHP, SOTC, STLT, STTH, SOSVTD, TENDV 
        FROM C##QLK.HOCPHAN HP JOIN C##QLK.DONVI DV ON HP.MADV = DV.MADV';
        OPEN RESULT_CURSOR FOR QUERY_STRING;
    END IF;
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_HOCPHAN', 'TKHOA');
    SP_GRANT_EXECUTE('SP_VIEW_HOCPHAN', 'TDV');
    SP_GRANT_EXECUTE('SP_VIEW_HOCPHAN', 'GV');
    SP_GRANT_EXECUTE('SP_VIEW_HOCPHAN', 'GVU');
    SP_GRANT_EXECUTE('SP_VIEW_HOCPHAN', 'NVCB');
    SP_GRANT_EXECUTE('SP_VIEW_HOCPHAN', 'SV');
END;
/
-- GUI KE HOACH MO HOC PHAN
CREATE OR REPLACE PROCEDURE SP_VIEW_KHMO(
    RESULT_CURSOR OUT SYS_REFCURSOR
)
AS
    TEMP_COUNT INT;
    QUERY_STRING VARCHAR2(1000);
BEGIN
    SELECT COUNT(*) INTO TEMP_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'KHMO';
    IF (TEMP_COUNT = 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'THONG TIN KHONG TON TAI!');
    ELSE
        QUERY_STRING := 'SELECT TENHP, HK, NAM, NGAYBD, MACT
        FROM C##QLK.KHMO KH JOIN C##QLK.HOCPHAN HP ON KH.MAHP = HP.MAHP';
        OPEN RESULT_CURSOR FOR QUERY_STRING;
    END IF;
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_KHMO', 'TKHOA');
    SP_GRANT_EXECUTE('SP_VIEW_KHMO', 'TDV');
    SP_GRANT_EXECUTE('SP_VIEW_KHMO', 'GV');
    SP_GRANT_EXECUTE('SP_VIEW_KHMO', 'GVU');
    SP_GRANT_EXECUTE('SP_VIEW_KHMO', 'NVCB');
    SP_GRANT_EXECUTE('SP_VIEW_KHMO', 'SV');
END;
/
-- GUI DANH SACH PHAN CONG
CREATE OR REPLACE PROCEDURE SP_VIEW_PHANCONG(
    RESULT_CURSOR OUT SYS_REFCURSOR
)
AS
    TEMP_COUNT INT;
    QUERY_STRING VARCHAR2(1000);
BEGIN
    SELECT COUNT(*) INTO TEMP_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'PHANCONG';
    IF (TEMP_COUNT = 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'THONG TIN KHONG TON TAI!');
    ELSE
        QUERY_STRING := 'SELECT HOTEN, TENHP, HK, NAM, MACT
        FROM C##QLK.PHANCONG PC JOIN C##QLK.NHANSU NS ON PC.MAGV = NS.MANV
        JOIN C##QLK.HOCPHAN HP ON HP.MAHP = PC.MAHP';
        OPEN RESULT_CURSOR FOR QUERY_STRING;
    END IF;
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_PHANCONG', 'TKHOA');
    SP_GRANT_EXECUTE('SP_VIEW_PHANCONG', 'TDV');
    SP_GRANT_EXECUTE('SP_VIEW_PHANCONG', 'GV');
    SP_GRANT_EXECUTE('SP_VIEW_PHANCONG', 'GVU');
    SP_GRANT_EXECUTE('SP_VIEW_PHANCONG', 'NVCB');
    SP_GRANT_EXECUTE('SP_VIEW_PHANCONG', 'SV');
END;
/
-- GUI DANH SACH DANG KY HOC PHAN
CREATE OR REPLACE PROCEDURE SP_VIEW_DANGKY(
    RESULT_CURSOR OUT SYS_REFCURSOR
)
AS
    TEMP_COUNT INT;
    QUERY_STRING VARCHAR2(1000);
BEGIN
    SELECT COUNT(*) INTO TEMP_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'DANGKY';
    IF (TEMP_COUNT = 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'THONG TIN KHONG TON TAI!');
    ELSE
        QUERY_STRING := 'SELECT SV.HOTEN AS HOTEN_SV, NS.HOTEN AS HOTEN_GV, HP.TENHP, HK, NAM, DK.MACT, DIEMTH, DIEMQT, DIEMCK,
        DIEMTK FROM C##QLK.DANGKY DK JOIN C##QLK.SINHVIEN SV ON DK.MASV=SV.MASV JOIN
        C##QLK.NHANSU NS ON NS.MANV = DK.MAGV JOIN C##QLK.HOCPHAN HP ON
        HP.MAHP = DK.MAHP';
        OPEN RESULT_CURSOR FOR QUERY_STRING;
    END IF;
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_DANGKY', 'TKHOA');
    SP_GRANT_EXECUTE('SP_VIEW_DANGKY', 'TDV');
    SP_GRANT_EXECUTE('SP_VIEW_DANGKY', 'GV');
    SP_GRANT_EXECUTE('SP_VIEW_DANGKY', 'GVU');
    SP_GRANT_EXECUTE('SP_VIEW_DANGKY', 'NVCB');
    SP_GRANT_EXECUTE('SP_VIEW_DANGKY', 'SV');
END;
/
-- GUI BUTTON THONG BAO
CREATE OR REPLACE PROCEDURE SP_VIEW_THONGBAO(
    RESULT_CURSOR OUT SYS_REFCURSOR
)
AS
    TEMP_COUNT INT;
    QUERY_STRING VARCHAR2(1000);
BEGIN
    SELECT COUNT(*) INTO TEMP_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'THONGBAO';
    IF (TEMP_COUNT = 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'THONG TIN KHONG TON TAI!');
    ELSE
        QUERY_STRING := 'SELECT NOIDUNG, THOIGIAN FROM C##QLK.THONGBAO';
        OPEN RESULT_CURSOR FOR QUERY_STRING;
    END IF;
END;
/
BEGIN
    SP_GRANT_EXECUTE('SP_VIEW_THONGBAO', 'TKHOA');
    SP_GRANT_EXECUTE('SP_VIEW_THONGBAO', 'TDV');
    SP_GRANT_EXECUTE('SP_VIEW_THONGBAO', 'GV');
    SP_GRANT_EXECUTE('SP_VIEW_THONGBAO', 'GVU');
    SP_GRANT_EXECUTE('SP_VIEW_THONGBAO', 'NVCB');
    SP_GRANT_EXECUTE('SP_VIEW_THONGBAO', 'SV');
END;
/
--CREATE OR REPLACE PROCEDURE SP_DROP_USERS_LIKE(
--    pattern IN VARCHAR2
--)
--AS
--    CURSOR user_cursor IS
--        SELECT USERNAME
--        FROM ALL_USERS
--        WHERE USERNAME LIKE pattern;
--
--    user_name VARCHAR2(100);
--BEGIN
--    FOR user_rec IN user_cursor LOOP
--        user_name := user_rec.USERNAME;
--        EXECUTE IMMEDIATE 'DROP USER ' || user_name || ' CASCADE';
--        DBMS_OUTPUT.PUT_LINE('User ' || user_name || ' dropped successfully.');
--    END LOOP;
--EXCEPTION
--    WHEN OTHERS THEN
--        RAISE_APPLICATION_ERROR(-20001, 'Error dropping user: ' || SQLERRM);
--END;
--/
--BEGIN
--    SP_DROP_USERS_LIKE('NV%');
--    SP_DROP_USERS_LIKE('SV%');
--END;
--/
CREATE OR REPLACE PROCEDURE SP_ALL_UPDATE_NHANSU(
    INP_DT IN CHAR
) AS
    QUERY_STRING VARCHAR2(1000);
BEGIN
    QUERY_STRING := 'UPDATE C##QLK.NHANSU SET DT = :dt';
    EXECUTE IMMEDIATE QUERY_STRING USING INP_DT;
END;
/
--BEGIN
--    C##QLK.SP_ALL_UPDATE_NHANSU('124-456-789');
--END;
--/
SELECT * FROM DANGKY;
CREATE OR REPLACE PROCEDURE SP_GV_UPDATE_DIEM(
    INP_DTH IN CHAR,
    INP_QT IN CHAR,
    INP_CK IN CHAR,
    INP_TK IN CHAR,
    INP_SV IN VARCHAR2
) AS
    QUERY_STRING VARCHAR2(1000);
BEGIN
    QUERY_STRING := 'UPDATE C##QLK.NHANSU SET DIEMTH = :TH, DIEMQT = :QT, DIEMCK = :CK, DIEMTK = :TK WHERE MASV = :VAR_SV';
    EXECUTE IMMEDIATE QUERY_STRING USING INP_DTH, INP_QT, INP_CK, INP_TK, INP_SV;
END;
/
EXEC SP_GRANT_EXECUTE('SP_GV_UPDATE_DIEM', 'GV');
SELECT * FROM SINHVIEN;
CREATE OR REPLACE PROCEDURE SP_GVU_INSERT_SINHVIEN(
    INP_TEN IN VARCHAR2,
    INP_PHAI IN VARCHAR2,
    INP_NGSINH IN DATE,
    INP_DCHI IN VARCHAR2,
    INP_DT IN CHAR,
    INP_MACT IN VARCHAR2,
    INP_MANGANH IN VARCHAR2,
    INP_SOTC IN NUMBER,
    INP_DTB IN NUMBER
) AS
    QUERY_STRING VARCHAR2(1000);
BEGIN
    QUERY_STRING := 'INSERT INTO C##QLK.SINHVIEN (HOTEN, PHAI, NGSINH, DCHI, DT, MACT, MANGANH, SOTC, DTB) VALUES (:TEN, :PHAI, :NGSINH, :DCHI, :DT, :MACT, :MANGANH, :SOTC, :DTB)';
    EXECUTE IMMEDIATE QUERY_STRING USING INP_TEN, INP_PHAI, INP_NGSINH, INP_DCHI, INP_DT, INP_MACT, INP_MANGANH, INP_SOTC, INP_DTB;
END;
/



